a, h1, h2, h3{
    text-align: center;
}
a{
    font: italic small-caps 1.4em cursive;
    color: black;
    line-height: 1.7;
}
body{
    background-image: url(../img/photo_3.jpg);
    background-color: white;
}
header{
    position: fixed;
    background: rgb(253,232,255);
    background: linear-gradient(90deg, rgba(253,232,255,1) 0%, rgba(255,255,255,1) 52%, rgba(171,241,255,1) 100%);
    padding: 0;
    margin: 0;
    top: 0;
    right: 0;
    left: 0;
    z-index: 2;
    max-height: 25%;
    padding-bottom: 3px;
    border-bottom-width: 2px;
    border-bottom-style: solid;
    border-bottom-color: black;
}
.header_bot{
    position: relative;
    height: 100%;
    max-height: 20em;;
    left: 20em;
    right: 15%;
}
.header_bot a{
    text-align: center;
    font: italic small-caps 1.8em cursive;
    color: black;
    margin-left: 10px;
    margin-right: 10ps;
}
.header_bot a:hover{
    font: italic small-caps bold 1.8em cursive;
}
main{
    position: relative;
    display: inline-block;
    z-index: 1;
    padding-top: 10em;
    left: 20%;
    width: 60%;
    background-color: white;
}
table{
    /*border: 1px solid black;*/
    width: 100%;
}
td{
    /*border: 1px solid black;*/
    text-align: left;
    vertical-align: center;
    horizontal-align: center;
}
.td_{
    text-align: center;
}
.a_{
    position: relative;
    left: 8em;
}
img{
    width: 17em;
    border: 1px solid black;
    border-radius: 67px;
}
.butterfly{
    border: 0px solid black;
}
.bigimg{
    border: 1px solid lightblue;
    border-radius: 15px;
    width: 100%;
}

.flex-container {
  /* We first create a flex layout context */
  display: flex;

  /* Then we define the flow direction
     and if we allow the items to wrap
   * Remember this is the same as:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;

  /* Then we define how is distributed the remaining space */
  justify-content: space-around;
  align-items: center;

  padding: 10px;
  margin: 0;
  list-style: none;
}

.flex-item {
  object-fit: cover;
  width: 100%;
  height: 100%;
  max-height: 11em;
  max-width: 8em;
  border-radius: 0;
  margin: 20px;
  padding: 0;
  font-size: 3em;
  text-align: center;
  cursor: pointer;
}

.gallery_main{
    left: 10%;
    width: 80%;
}

#magnify {
  display: none;

  /* position: absolute; upd: 24.10.2016 */
  position: fixed;
  max-width: 600px;
  height: auto;
  z-index: 9999;
}

#magnify img {
  width: 100%;
  border: none;
  border-radius: 0px;
}

/* затемняющий фон */
#overlay {
  display: none;

  background: #000;
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0.5;
  z-index: 99;
}

/* кнопка закрытия */
#close-popup {
  width: 30px;
  height: 30px;

  background: #FFFFFF;
  border: 1px solid #AFAFAF;
  border-radius: 15px;
  cursor: pointer;
  position: absolute;
  top: 15px;
  right: 15px;
}

#close-popup i {
  width: 30px;
  height: 30px;
  background: url(https://codernote.ru/files/cross.png) no-repeat center center;
  background-size: 16px 16px;
  display: block;
}

@keyframes rota {
 25% { transform: rotate(360deg); }
}

#close-popup:hover {
  animation: rota 4s infinite normal;
  -webkit-animation-iteration-count: 1;
  animation-iteration-count: 1;
}